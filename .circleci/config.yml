# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2.1
orbs:
  slack: circleci/slack@3.4.2
  aws-ecr: circleci/aws-ecr@6.12.2
  aws-ecs: circleci/aws-ecs@1.3.0

jobs:
  build:
    docker:
      # Specify the version you desire here
      - image: circleci/php:7.4-node-browsers
      - image: circleci/mysql:8

    working_directory: ~/test

      # environmentはジョブに対する環境変数となる
    environment:
      - MYSQL_ALLOW_EMPTY_PASSWORD: true

    steps:
      - checkout

      - run: 
          name: Make Env file
          command: cp .env.circleci .env

      # PHP CircleCI 2.0 Configuration File
      # PHP CircleCI 2.0 Configuration File sudo apt install zlib1g-dev libsqlite3-dev
      - run: sudo apt update 
      - run: sudo docker-php-ext-install zip pdo_mysql

      # Download and cache dependencies
      - restore_cache:
          keys:
            # "composer.lock" can be used if it is committed to the repo
            - v1-dependencies-{{ checksum "composer.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: composer install -n --prefer-dist

      - save_cache:
          key: v1-dependencies-{{ checksum "composer.json" }}
          paths:
            - ./vendor
      - restore_cache:
          keys:
            - node-v1-{{ checksum "package.json" }}
            - node-v1-
      - run: yarn install
      - save_cache:
          key: node-v1-{{ checksum "package.json" }}
          paths:
            - node_modules

      # prepare the database
      - run: php artisan migrate --seed

      # run tests with phpunit or codecept
      #- run: ./vendor/bin/phpunit
      # - run: ./vendor/bin/codecept build
      # - run: ./vendor/bin/codecept run

      - run: php artisan dusk:chrome-driver

      - run:
          name: Start Chrome Driver
          command: ./vendor/laravel/dusk/bin/chromedriver-linux
          background: true
      - run:
          name: Run Laravel Server
          command: php artisan serve
          background: true
      - run:
          name: Run PHPUnit Tests
          command: php artisan test
      # - run:
      #     name: Run Laravel Dusk Tests
      #     command: php artisan dusk

      - run:
          name: PHP Code Check
          command: ./vendor/bin/phpcs --standard=phpcs.xml ./

      - run:
          name: JavaScript Code Check
          command: ./node_modules/.bin/eslint --fix ./resources/js/components

      # ビルド結果を通知
      - slack/status

workflows:
  build_and_push_image:
    jobs:
      - build

      # --------イメージを更新しないなら不要-----------
      # - aws-ecr/build-and-push-image:
      #     requires:
      #       - build
      #     filters:
      #       branches:
      #         only: master
      #     account-url: AWS_ECR_ACCOUNT_URL
      #     aws-access-key-id: AWS_ACCESS_KEY_ID
      #     aws-secret-access-key: AWS_SECRET_ACCESS_KEY
      #     create-repo: true
      #     # Name of dockerfile to use. Defaults to Dockerfile.
      #     dockerfile: Dockerfile

      #     # AWS_REGION_ENV_VAR_NAME
      #     region: AWS_DEFAULT_REGION

      #     # my ECR Repository
      #     # repo: '${MY_APP_PREFIX}'
      #     repo: 'app-ecs'

      #     # my ECR Repo Tag
      #     tag: "$CIRCLE_SHA1"

      # -----しばらく停止----------
      # - aws-ecs/deploy-service-update:
      #     requires:
      #       - build
      #     filters:
      #       branches:
      #         only: master
      #       # - aws-ecr/build-and-push-image
      #     aws-region: AWS_DEFAULT_REGION
      #     # Name of the task definition's family.
      #     # タスク名とサービス名は同じにしておかないとエラーが発生する。
      #     family: '${MY_APP_PREFIX}-service'
      #     cluster-name: '${MY_APP_PREFIX}-cluster'
      #     # Use this to update the Docker image names and/or tag names of existing containers that had been defined in the previous task definition
      #     container-image-name-updates: 'container=${MY_APP_PREFIX}-service,tag=${CIRCLE_SHA1}'




